# ========================================== CONAN configuration file v3.3.12 ======================================== 
#      *********** KEYS *****************************************************************************************
#      PRIORS: *Fix-F(val), *Norm-N(mu,std), *Uni-U(min,start,max), *TruncNorm‚Äì(min,max,mu,std), *LogUni-LU(min,start,max)
#      Ssmp         : supersampling - x{factor} e.g. x30 to create 30 subexposures per point
#      ClipOutliers : c{column_no}:W{window_width}C{clip_sigma}n{niter} e.g. c1:W11C5n1. column_no='a' to clip in all valid columns
#      scl_col      : scale data columns ‚Äì ['med_sub','rs0to1','rs-1to1','None']
#      spline       : c{column_no}:d{degree}K{knot_spacing} e.g. c0:d3K2 
#      ***********************************************************************************************************
# -----------------------------------------------------------------------------------------------------------------------
	LC_filepath: data/
	RV_filepath: data/
	n_planet: 3
# -----------------------------------------PHOTOMETRY--------------------------------------------------------------------
	LC_auto_decorr: False   | delta_BIC: -5  # automatically determine baseline function for LCs with delta_BIC=-5
	exclude_cols:   []                         # list of column numbers (e.g. [3,4]) to exclude from decorrelation.
	enforce_pars:   []                         # list of decorr params (e.g. [B3, A5]) to enforce in decorrelation
# ============ Input lightcurves, filters baseline function =======================================================
	name                         flt ùúÜ_ùúám |Ssmp ClipOutliers scl_col |off col0 col3 col4 col5 col6 col7 col8|sin id GP spline         
	K2-233_C15_detrended_cut.dat V   0.6  |x30  None         None    |  y    0    0    0    0    0    0    0|n    1 n  None           
# ============ Sinusoidal signals: Amp*trig(2ùúã/P*(x-x0)) - trig=sin or cos or both added==========================
	name/filt                    trig     n_harmonics  x     Amp[ppm]            P                   x0                
# ============ Photometry GP properties (start newline with name of * or + to Xply or add a 2nd gp to last file) =========
	name/filt                    kern  par    h1:[Amp]           h2:[len_scale1]    h3:[Q,Œ∑,C,Œ±,b]     h4:[P]       
# -----------------------------------------RADIAL VELOCITY---------------------------------------------------------------
	RV_auto_decorr: False   | delta_BIC: -5  # automatically determine baseline function for the RVs
	exclude_cols:   []                         # list of column numbers (e.g. [3,4]) to exclude from decorrelation.
	enforce_pars:   []                         # list of decorr params (e.g. [B3, A5]) to enforce in decorrelation
# ============ Input RV curves, baseline function, GP, spline,  gamma ============================================ 
	name         RVunit scl_col |col0 col3 col4 col5| sin GP spline_config   | gamma_m/s      
	k2_233rv.dat m/s    None    |   0    0    0    0|   0 sp None            | U(-9700,-9650,-9600)
# ============ RV GP properties (start newline with name of * or + to Xply or add a 2nd gp to last file) =======
	name         kern  par    h1:[Amp_ppm]       h2:[len_scale]     h3:[Q,Œ∑,C,Œ±,b]     h4:[P]       | h5:[Der_Amp_ppm] ErrCol
	k2_233rv.dat qp    col1   U(0.0,4,100)       U(1,10,500)        U(0.1,0.5,5)       U(8,10,12)   | U(-100,0,100)    col2  
	         |+| qp    col3   U(0.0,1,100)       None               None               None         | F(0)             col2  
	         |+| qp    col4   U(-100,0,100)      None               None               None         | U(-100,0,100)    col2  
# -----------------------------------------------------------------------------------------------------------------------
# ============ Planet parameters (Transit and RV) setup ========================================================== 
	name                       fit 	prior                              	note
	[rho_star]/Duration        y   	N(3.17,0.07)                       	#choice in []|unit(gcm^-3/days)
	--------repeat this line & params below for multisystem, adding '_planet_number' to the names e.g RpRs_1 for planet 1, ...
	RpRs_1                     y   	U(0.01,0.02,0.05)                  	#range[-0.5,0.5]
	Impact_para_1              y   	U(0,0.13,0.5)                      	#range[0,2]
	T_0_1                      y   	U(7991.6745,7991.6897,7991.7077)   	#unit(days)
	Period_1                   y   	U(2.4667,2.467,2.4683)             	#range[0,inf]days
	[Eccentricity_1]/sesinw_1  n   	F(0)                               	#choice in []|range[0,1]/range[-1,1]
	[omega_1]/secosw_1         n   	F(90)                              	#choice in []|range[0,360]deg/range[-1,1]
	K_1                        y   	U(0,2,5)                           	#unit(same as RVdata)
	------------
	RpRs_2                     y   	U(0.01,0.02,0.05)                  	#range[-0.5,0.5]
	Impact_para_2              y   	U(0,0.13,0.5)                      	#range[0,2]
	T_0_2                      y   	U(7586.8425,7586.862,7586.9105)    	#unit(days)
	Period_2                   y   	U(7.0547,7.06,7.0655)              	#range[0,inf]days
	[Eccentricity_2]/sesinw_2  n   	F(0)                               	#choice in []|range[0,1]/range[-1,1]
	[omega_2]/secosw_2         n   	F(90)                              	#choice in []|range[0,360]deg/range[-1,1]
	K_2                        y   	U(0,2,5)                           	#unit(same as RVdata)
	------------
	RpRs_3                     y   	U(0.01,0.02,0.05)                  	#range[-0.5,0.5]
	Impact_para_3              y   	U(0,0.3,0.5)                       	#range[0,2]
	T_0_3                      y   	U(8005.564,8005.5802,8005.6008)    	#unit(days)
	Period_3                   y   	U(24.3509,24.36,24.3781)           	#range[0,inf]days
	[Eccentricity_3]/sesinw_3  y   	U(0,0.1,0.3)                       	#choice in []|range[0,1]/range[-1,1]
	[omega_3]/secosw_3         y   	U(0,90,360)                        	#choice in []|range[0,360]deg/range[-1,1]
	K_3                        y   	U(0,2,5)                           	#unit(same as RVdata)
# ============ Limb darkening setup ============================================================================= 
	filters	fit	q1               	q2               
	V      	y  	U(0,0.2,1)       	U(0,0.2,1)       
# ============ ddF setup ========================================================================================
	Fit_ddFs	dRpRs           	div_white
	n       	U(-0.5,0,0.5)   	n  
# ============ TTV setup ========================================================================================
	Fit_TTVs	dt_priors(deviation from linear T0)	transit_baseline[P]	per_LC_T0 	include_partial
	n       	U(-0.125,0,0.125)                  	             0.2500	False     	True
# ============ Phase curve setup ================================================================================ 
	flt D_occ[ppm]         Fn[ppm]            ph_off[deg]  A_ev[ppm]       f1_ev[ppm]    A_db[ppm]       pc_model
	V   F(0)               None               None         F(0)            F(0)          F(0)            cosine  
# ============ Custom LC function (read from custom_LCfunc.py file)================================================
	function        : None                                    	#custom function/class to combine with/replace LCmodel
	x               : None                                    	#independent variable [time, phase_angle]
	func_pars       : None                                    	#param names&priors e.g. A:U(0,1,2),P:N(2,1)
	extra_args      : None                                    	#extra args to func as a dict e.g ld_law:quad
	op_func         : None                                    	#function to combine the LC and custom models
	replace_LCmodel : False                                   	#if the custom function replaces the LC model
# ============ Custom RV function (read from custom_RVfunc.py file)================================================
	function        : None                                    	#custom function/class to combine with/replace RVmodel
	x               : None                                    	#independent variable [time, true_anomaly]
	func_pars       : None                                    	#param names&priors e.g. A:U(0,1,2),P:N(2,1)
	extra_args      : None                                    	#extra args to func as a dict
	op_func         : None                                    	#function to combine the RV and custom models
	replace_RVmodel : False                                   	#if the custom function replaces the RV model
# -----------------------------------------------------------------------------------------------------------------------
# ============ contamination setup (give contamination as flux ratio) ======================================== 
	flt	contam_factor
	V  	F(0)                
# ============ Stellar input properties ======================================================================
	# parameter     value 
	Radius_[Rsun]  N(0.71,0.01)
	Mass_[Msun]    N(0.79,0.01)
	Input_method:[R+rho(Rrho), M+rho(Mrho)]: Rrho
# -----------------------------------------------------------------------------------------------------------------------
# ============ FIT setup =====================================================================================
	Number_steps                              2000 
	Number_chains                             64 
	Number_of_processes                       10 
	Burnin_length                             500 
	n_live                                    100 
	force_nlive                               False 
	d_logz                                    0.1 
	Sampler(emcee/dynesty)                    dynesty 
	emcee_move(stretch/demc/snooker)          stretch 
	nested_sampling(static/dynamic[pfrac])    static 
	leastsq_for_basepar(y/n)                  n 
	apply_LCjitter(y/n,list)                  y 
	apply_RVjitter(y/n,list)                  y 
	LCjitter_loglims(auto/[lo,hi])            auto 
	RVjitter_lims(auto/[lo,hi])               auto 
	LCbasecoeff_lims(auto/[lo,hi])            auto 
	RVbasecoeff_lims(auto/[lo,hi])            auto 
	Light_Travel_Time_correction(y/n)         n 
	apply_LC_GPndim_jitter(y/n)               y 
	apply_RV_GPndim_jitter(y/n)               y 
	apply_LC_GPndim_offset(y/n)               y 
	apply_RV_GPndim_offset(y/n)               y 
